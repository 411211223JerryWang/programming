心得總結
在前幾周還沒有作業的時候，主要都是自己學一些C語言的程式碼，因為感覺教授講得有點跳脫。但是在設定vscode的時候遇到許多困難，包括安裝路徑和終端，導致我之後都放棄使用vscode而是用線上的GDB做題目。

作業2
利用[][]的方式表示棋盤陣列讓我很驚訝，原本是打算用兩個分開的串列的，無疑是省下很多時間。
這個作業主要是判斷在某個點能不能下棋，其餘的迴圈都沒有太大壓力，主要是對於8個方向的判斷。
之後選擇詢問chatgpt，了解了利用for迴圈選取[]中的資料，依次讀取8個方向的資料，就能達成。
判斷是否夾住棋子則是利用for迴圈給定增大的值來排查同方位的後續棋子。
因為第一次用c語言寫作業，不太熟scanf,printf的用法，選擇了較為簡單的c++ cin in out用法，但也變得更複雜。
程式碼也都把所有回套在一起，讓之後看得自己也看不懂。
不知道是為了之後的整體程式做函數，所以還自己寫了很多看似有用的使用方法，這花的時間比主要目標還多。

作業4
開始進入函數的應用了，但還沒搞懂int和void的差別。
一開始不太懂題目的用意，明明上次才做了全方向的判斷方法，為何要改為判斷單方向。
相較於判斷能不能下，比較令我不解的是回全方面，我想做成黑白棋分開判斷，但卻寫在同一個函數裡面，導致無法區分是黑棋還是白棋的結果。
跟著教授的指引，了解了每個函數的用途後，才完成作業。
也寫了超長的操作區，感覺可以在改進一下。

作業5
本次的目標是交換棋子，並且記錄翻轉數量。
讀題目的時候只想到如何翻轉，但沒想到紀錄數量。
因為看不懂範例(x,y,z)的作法，耽誤了許久血沒能按時上傳連結。
之後才發覺利用變數家在迴圈中也可記錄，但是依然被return的部分卡關。

作業6
目標是爭和所有函數，成為完整的黑白棋程式。
但在架構的時候就想了很久，也跟我不擅長寫操作區有關。
卡關太久只好讓chatgpt提示我架構，然後再利用作業2,5的程式碼完成黑白雙方的下棋操作。
繳交前依然沒能找出回傳翻轉數量的方法，之後才想到應該多寫一個函數單獨計算。
整個作業雖然都是用線上GDB完成，但我也有盡力debug，直到程式碼剩下我不了解的結構問題，如{號的判斷，才會選擇繳交。
希望下次作業能把以上的問題盡數改進。
